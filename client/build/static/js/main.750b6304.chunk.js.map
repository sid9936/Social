{"version":3,"sources":["images/memories.png","api/index.js","actions/posts.js","constants/actionTypes.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","styles.js","App.js","reducers/index.js","reducers/posts.js","index.js"],"names":["module","exports","__webpack_require__","p","url","getPosts","async","data","axios","get","dispatch","type","payload","error","console","log","message","createPost","post","newPost","api","updatePost","id","updatedPost","patch","concat","likePost","deletePost","delete","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","_ref","setCurrentId","useDispatch","classes","useStyles","React","createElement","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","_id","MoreHorizIcon","fontSize","component","tags","map","tag","gutterBottom","CardContent","CardActions","ThumbUpAltIcon","likeCount","DeleteIcon","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","posts","useSelector","state","length","Grid","container","key","item","xs","sm","CircularProgress","root","& .MuiTextField-root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","postData","setPostData","useState","find","useEffect","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","TextField","name","label","fullWidth","value","onChange","target","multiline","rows","split","FileBase","multiple","onDone","_ref2","base64","appBar","heading","marginLeft","App","Container","maxWidth","AppBar","align","src","memories","alt","Grow","in","justify","combineReducers","arguments","undefined","action","filter","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.750b6304.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/memories.53639ed7.png\";","import axios from 'axios';\r\n\r\nconst url = 'http://localhost:5000/posts';\r\n\r\nexport const fetchPosts = () => axios.get(url);\r\nexport const createPost = (newPost) => axios.post(url, newPost);\r\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);\r\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost);\r\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);","import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes.js';\r\n\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createPost(post);\r\n\r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.likePost(id);\r\n\r\n    dispatch({ type: LIKE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};","export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\nexport const LIKE = 'LIKE';","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});","import React from 'react';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core/';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { likePost, deletePost } from '../../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\r\n      <div className={classes.overlay}>\r\n        <Typography variant=\"h6\">{post.creator}</Typography>\r\n        <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n      </div>\r\n      <div className={classes.overlay2}>\r\n        <Button style={{ color: 'white' }} size=\"small\" onClick={() => setCurrentId(post._id)}><MoreHorizIcon fontSize=\"default\" /></Button>\r\n      </div>\r\n      <div className={classes.details}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n      </div>\r\n      <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.cardActions}>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => dispatch(likePost(post._id))}><ThumbUpAltIcon fontSize=\"small\" /> Like {post.likeCount} </Button>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}><DeleteIcon fontSize=\"small\" /> Delete</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));","import React from 'react';\r\nimport {Grid, CircularProgress} from '@material-ui/core';\r\nimport {useSelector} from 'react-redux';\r\nimport Post from './Post/Post';\r\nimport useStyles from './styles';\r\n\r\nconst Posts=() =>{\r\n    const classes=useStyles();\r\n    const posts=useSelector((state)=>state.posts);\r\n    console.log(posts);\r\n    return (\r\n        !posts.length ? <CircularProgress /> : (\r\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n                {posts.map((post)=> (\r\n                    <Grid key={post._id} item xs={12} sm={6}>\r\n                        <Post post={post} />\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        )      \r\n    );\r\n}\r\n\r\nexport default Posts;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileBase from 'react-file-base64';\r\n\r\nimport useStyles from './styles';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n  const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  const clear = () => {\r\n    setCurrentId(0);\r\n    setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (currentId === 0) {\r\n      dispatch(createPost(postData));\r\n      clear();\r\n    } else {\r\n      dispatch(updatePost(currentId, postData));\r\n      clear();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Share your Post here!'}</Typography>\r\n        <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\r\n        <TextField name=\"title\" variant=\"outlined\" label=\"Post Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Form;","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles(()=> ({\r\n    appBar: {\r\n        borderRadius: 15,\r\n        margin: '30px 0',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      },\r\n      heading: {\r\n        color: 'rgba(0,183,255, 1)',\r\n      },\r\n      image: {\r\n        marginLeft: '15px',\r\n      },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Posts from './components/Posts/Posts';\r\nimport Form from './components/Form/Form';\r\nimport { getPosts } from './actions/posts';\r\nimport useStyles from './styles';\r\nimport memories from './images/memories.png';\r\n\r\nconst App = () => {\r\n  const [currentId, setCurrentId] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPosts());\r\n  }, [currentId, dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n        <Typography className={classes.heading} variant=\"h1\" align=\"left\">JSocial</Typography>\r\n        <img className={classes.image} src={memories} alt=\"icon\" height=\"120\" />\r\n      </AppBar>\r\n      <Grow in>\r\n        <Container>\r\n          <Grid container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n            <Grid item xs={12} sm={7}>\r\n              <Posts setCurrentId={setCurrentId} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Grow>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\n\r\nimport posts from './posts';\r\n\r\nexport default combineReducers({ posts });","import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\nexport default (posts = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL:\r\n      return action.payload;\r\n    case LIKE:\r\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n    case CREATE:\r\n      return [...posts, action.payload];\r\n    case UPDATE:\r\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n    case DELETE:\r\n      return posts.filter((post) => post._id !== action.payload);\r\n    default:\r\n      return posts;\r\n  }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, compose} from 'redux';\r\nimport {applyMiddleware} from 'redux';\r\nimport {thunk} from 'redux-thunk';\r\nimport App from './App';\r\nimport reducers from './reducers';\r\n//import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport './index.css';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}